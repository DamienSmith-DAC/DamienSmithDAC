#!/bin/bash

#######################################################################################
# Copy SIRA full backup files from siradp-mysqlS02 to backup-master01.
# This is a data pull.
# This script is called by root cron job scheduled to run
# every day 1 hour after Sira full backup cronjob on siradp-mysqlS02
########################################################################################
# Version: 1.0
# Developer: Joe C
########################################################################################

export LC_ALL=C

#Variables
REMOTE_HOST="10.74.31.105"
PARENT_FULL_DIR="/db/mysql_backup"
REMOTE_FULL_DIR=${PARENT_FULL_DIR}
ROOTDIR="/analytics/sira_mysql_backup"
LOCAL_PARENT_FULL_DIR="$ROOTDIR/full"
TODAYS_FULL_DIR="${LOCAL_PARENT_FULL_DIR}/$(date "+%Y")/$(date "+%m")/$(date "+%d")"
LOG_DIR="$ROOTDIR/log"
LOG_PATH="$LOG_DIR/FULL_COPY_$(date +%a%Y%m%d).log"
# time offset for daytime saving
OFFSET=11

# Log function
function log_info()
{
    log_time=`date "+%Y-%m-%d:%H:%M:%S"`
    echo -e "$* $log_time" >> ${LOG_PATH}
}

clock() 
{
        date -d "+$OFFSET hours" +"%Y-%m-%d %H:%M:%S"
}
now() 
{
        date -d "+$OFFSET hours" +"[%Y-%m-%d %H:%M:%S]"
}

THEN=$(clock)

# create local directory if it doesnt exit
[ ! -d ${LOG_DIR} ] && mkdir -p ${LOG_DIR}
[ ! -d ${TODAYS_FULL_DIR} ] && mkdir -p ${TODAYS_FULL_DIR}

# check if remote directory is available for copy
ssh ${REMOTE_HOST}  "test -e ${REMOTE_FULL_DIR}"

CONTENT="N/A"

# Start copy if remote directory is available
if [ $? -eq 0 ]; then

   log_info "Info:File ${REMOTE_FULL_DIR}@${REMOTE_HOST} exists. Start copy"
   rsync --remove-source-files -re  "ssh" root@${REMOTE_HOST}:${REMOTE_FULL_DIR} ${TODAYS_FULL_DIR}
   CONTENT="Sira daily backup is done successfully at"

else

   log_info "Info:File ${REMOTE_FULL_DIR}@${REMOTE_HOST} doesnot exist"

fi

# send a notice

readtime() {
        date -d "+$OFFSET hours" +"%a %b %d %H:%M:%S %Y"
}
mth() {
        date +"%Y%m"
}
LOG='/tmp/sira-weekly-backup'-$(mth).log
log() {
        msg=$1
        echo "[$(now)] $msg" >> $LOG
}

NOW=$(clock)
TO='Joe.Chiu@treasury.nsw.gov.au'
TO='dacsupport@treasury.nsw.gov.au'
FROM='Joe Chiu<Joe.Chiu@treasury.nsw.gov.au>'

/usr/sbin/sendmail -t <<MSGMAIL
To: $TO
From: $FROM
Subject: noreply: Sira Data Daily Backup - start at $THEN
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8

$CONTENT $NOW.

This mail is generated by $HOSTNAME, please don't reply.
MSGMAIL

